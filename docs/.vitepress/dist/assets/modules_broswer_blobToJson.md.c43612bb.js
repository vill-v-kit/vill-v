import{_ as n,c as s,o as a,a as o}from"./app.6672c7b4.js";const h='{"title":"blobToJson","description":"","frontmatter":{},"headers":[{"level":2,"title":"Demo","slug":"demo"},{"level":2,"title":"DTS","slug":"dts"}],"relativePath":"modules/broswer/blobToJson.md","lastUpdated":1652177014000}',t={},p=o(`<h1 id="blobtojson" tabindex="-1">blobToJson <a class="header-anchor" href="#blobtojson" aria-hidden="true">#</a></h1><p>\u5C06<code>blob</code> \u8F6C\u6362\u4E3A <code>json</code></p><p>\u7528\u4E8E\u89E3\u51B3 <code>XMLHttpRequest</code> \u8BBE\u7F6E <code>responseType:&#39;blob&#39;</code>\u65F6 \u670D\u52A1\u7AEF\u8FD4\u56DEjson\u7684\u89E3\u6790</p><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>blobToJson<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vill-v/broswer&#39;</span>

<span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;http://xxxx.xxx.xxx&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">&#39;blob&#39;</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">blobToJson</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="dts" tabindex="-1">DTS <a class="header-anchor" href="#dts" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">blobToJson</span><span class="token punctuation">(</span>blob<span class="token operator">:</span> Blob<span class="token punctuation">,</span> format<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre></div>`,7),e=[p];function c(l,r,i,u,k,d){return a(),s("div",null,e)}var _=n(t,[["render",c]]);export{h as __pageData,_ as default};
